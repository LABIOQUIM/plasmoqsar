version: "3"

services:
  api:
    image: labioquim/qsar-api:prod
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    env_file: .env
    volumes:
      - files:/files

  ui:
    build:
      context: .
      dockerfile: apps/ui/Dockerfile
    image: labioquim/qsar-ui:prod
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.ui.loadbalancer.server.port=3000"
      - "traefik.http.routers.ui.rule=Host(`${UI_URL}`)"
      - "traefik.http.routers.ui.service=ui"
      - "traefik.http.routers.ui.tls=true"
      - "traefik.http.routers.ui.tls.certresolver=letsencrypt"
      - "traefik.http.routers.ui.tls.domains[0].main=${UI_URL}"
      - "traefik.http.routers.ui.entryPoints=websecure"
    depends_on:
      - api
      - database
    links:
      - api
      - database

  database:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "qsar"
    ports:
     - "5432:5432"
    volumes:
      - database:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    volumes:
      - redis:/data

  # INFRA
  traefik:
    image: traefik
    command:
      - "--log.level=DEBUG"
      - "--api.dashboard=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.watch=true"

      - "--certificatesresolvers.letsencrypt.acme.email=ivoprovensi1@gmail.com"  # replace with your email
      - "--certificatesresolvers.letsencrypt.acme.storage=acme/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"

      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.analytics.address=:8000"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
      - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
      - "--entryPoints.web.http.redirections.entrypoint.permanent=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik_acme:/acme
      - traefik_logs:/logs
    ports:
      - 80:80
      - 443:443
      - 8000:8000

  # ANALYTICS
  plausible_db:
    # supported versions are 12, 13, and 14
    image: postgres:14-alpine
    restart: always
    volumes:
      - plausible_database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres

  plausible_events_db:
    image: clickhouse/clickhouse-server:23.3.7.5-alpine
    restart: always
    volumes:
      - plausible_event_database:/var/lib/clickhouse
      - ./clickhouse/clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro
      - ./clickhouse/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/logging.xml:ro
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  plausible:
    image: plausible/analytics:v2.0
    restart: always
    command: sh -c "sleep 10 && /entrypoint.sh db createdb && /entrypoint.sh db migrate && /entrypoint.sh run"
    labels:
      - "traefik.enable=true"
      - "traefik.analytics.services.plausible.loadbalancer.server.port=8000"
      - "traefik.analytics.routers.plausible.rule=Host(`${PLAUSIBLE_URL}`)"
      - "traefik.analytics.routers.plausible.service=plausible"
    depends_on:
      - plausible_db
      - plausible_events_db
    env_file:
      - .env

volumes:
  plausible_event_database:
    driver: nfsvol
  plausible_database:
    driver: nfsvol
  traefik_acme:
    driver: nfsvol
  traefik_logs:
    driver: nfsvol
  database:
    driver: nfsvol
  files:
    driver: nfsvol
  redis:
    driver: nfsvol